package cn.net.yto.ui;

import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.os.Handler;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.EditText;
import android.widget.Spinner;
import cn.net.yto.R;
import cn.net.yto.biz.BarcodeManager;
import cn.net.yto.biz.BasicDataManager;
import cn.net.yto.biz.ReceiveManager;
import cn.net.yto.utils.CommonUtils;
import cn.net.yto.utils.DialogHelper;
import cn.net.yto.vo.InsteadPayCustomerVO;
import cn.net.yto.vo.ReceiveVO;

public class ReceiveMoneyViewPagerItem extends ViewPageItemAbs {

	private View mRootView;

	private CheckBox mToPayCbox;
	private CheckBox mColPayCbox;
	private EditText mGoodsValEdit;
	private EditText mInstructionEdit;

	private Button mSaveBtn;
	private Button mBackBtn;

	private Spinner mClientSpinner;
	private List<InsteadPayCustomerVO> mCustomerList;
	private ReceiveManager mReceiveManager;
	private BarcodeManager mBarcodeManager;
	private BasicDataManager mBasicDataManager;
	private ReceiveExpressPageActivity sParent;

	public ReceiveMoneyViewPagerItem(Activity context, ViewPager viewPager) {
		super(context, viewPager);

		mReceiveManager = ReceiveManager.getInstance();
		mBasicDataManager = BasicDataManager.getInstance();
		mBarcodeManager = BarcodeManager.getInstance();
		sParent = ReceiveExpressPageActivity.getInstance();

		LayoutInflater inflater = mContext.getLayoutInflater();
		mRootView = inflater.inflate(R.layout.activity_receive_no_order_money,
				null);

		mCustomerList = new ArrayList<InsteadPayCustomerVO>();
		InsteadPayCustomerVO vo = new InsteadPayCustomerVO();
		vo.setCustomerName(mContext.getString(R.string.please_select));
		mCustomerList.add(vo);
		mCustomerList.addAll(BasicDataManager.getInstance()
				.queryInsteadPayCustomerList());
		initViews();
	}

	@Override
	public void onDestroy() {
		mCustomerList.clear();
		super.onDestroy();
	}

	@Override
	public void onPageSelected() {
		ReceiveVO vo = mReceiveManager.getCurNomalReceiveVO();
		if (vo == null || CommonUtils.isEmpty(vo.getWaybillNo())) {
			DialogHelper.showToast(mContext, R.string.way_bill_no_empty_tips);
			onBackBtnClicked();
		} else if (!mBarcodeManager.isInvertedPayNoValid(vo.getWaybillNo())) {
			DialogHelper.showToast(mContext,
					R.string.inverted_pay_no_invalid_tips);
			onBackBtnClicked();
		}
		super.onPageSelected();
	}

	@Override
	public void onPageDeSelected() {
		save();
		super.onPageDeSelected();
	}

	private void save() {
		if (mToPayCbox.isChecked() || mColPayCbox.isChecked()) {
			if (mClientSpinner.getSelectedItemPosition() > 0) {
				String goodsAmt = mGoodsValEdit.getText().toString();

				if (!CommonUtils.isEmpty(goodsAmt)) {
					InsteadPayCustomerVO customer = mCustomerList
							.get(mClientSpinner.getSelectedItemPosition());
					ReceiveVO receiveVo = mReceiveManager
							.getCurNomalReceiveVO();

					receiveVo.setContactCode(customer.getCustomerCode());
					receiveVo.setContactName(customer.getCustomerName());
					receiveVo.setContactPhone(customer.getCustomerContacts());

					if (mToPayCbox.isChecked()) {
						receiveVo.setInvertedPay("1");
					} else {
						receiveVo.setInvertedPay("0");
					}

					if (mColPayCbox.isChecked()) {
						receiveVo.setInsteadPay("1");
					} else {
						receiveVo.setInsteadPay("0");
					}
					
					receiveVo.setGoodsAmount(goodsAmt);
				} else {
					
				}
			}
		}
	}

	protected void onBackBtnClicked() {
		new Handler().postDelayed(new Runnable() {
			@Override
			public void run() {
				sParent.setPageIndex(0);
			}
		}, 200);
	}

	@Override
	public View getItemView() {
		return mRootView;
	}

	private void initViews() {
		mToPayCbox = (CheckBox) mRootView.findViewById(R.id.to_pay_cbox);
		mColPayCbox = (CheckBox) mRootView.findViewById(R.id.col_payment_cbox);
		mGoodsValEdit = (EditText) mRootView.findViewById(R.id.goods_val_edt);
		mInstructionEdit = (EditText) mRootView
				.findViewById(R.id.instruction_edt);

		mSaveBtn = (Button) mRootView.findViewById(R.id.rec_save_btn);
		mSaveBtn.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				save();
			}
		});
		mBackBtn = (Button) mRootView.findViewById(R.id.rec_back_btn);
		mBackBtn.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				onBackBtnClicked();
			}
		});
		mToPayCbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
			@Override
			public void onCheckedChanged(CompoundButton buttonView,
					boolean isChecked) {
				if (isChecked) {

				}
			}
		});
		mColPayCbox.setOnCheckedChangeListener(new OnCheckedChangeListener() {
			@Override
			public void onCheckedChanged(CompoundButton buttonView,
					boolean isChecked) {
				mInstructionEdit.setEnabled(true);
				if (isChecked) {
					if (mClientSpinner.getSelectedItemPosition() > 0) {
						mInstructionEdit.setText(R.string.allow_inverted_pay);
					} else {
						mInstructionEdit
								.setText(R.string.not_allow_inverted_pay);
					}
				} else {
					mInstructionEdit.setText("");
				}
				mInstructionEdit.setEnabled(false);
			}
		});

		mClientSpinner = (Spinner) mRootView.findViewById(R.id.client_spinner);
		ArrayAdapter<InsteadPayCustomerVO> adapter = new ArrayAdapter<InsteadPayCustomerVO>(
				mContext, android.R.layout.simple_spinner_item, mCustomerList);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		mClientSpinner.setAdapter(adapter);
		mClientSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {
			@Override
			public void onItemSelected(AdapterView<?> arg0, View arg1,
					int arg2, long arg3) {

			}

			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
			}
		});
	}

}
