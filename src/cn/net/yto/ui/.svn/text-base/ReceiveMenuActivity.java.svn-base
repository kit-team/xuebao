package cn.net.yto.ui;

import java.util.ArrayList;
import java.util.List;


import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Handler;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import cn.net.yto.R;
import cn.net.yto.biz.UserManager;
import cn.net.yto.ui.menu.ListMenuItemAdapter;
import cn.net.yto.ui.menu.MenuAction;
import cn.net.yto.ui.menu.MenuItem;
import cn.net.yto.ui.menu.GridMenuItemAdapter;

public class ReceiveMenuActivity extends BaseActivity {
	private static final String TAG = "ReceiveMenuActivity";
	private ListView mListView;
	private ArrayList<MenuItem> mMenuItemList = new ArrayList<MenuItem>();
	private UserManager mUserService;
	private TextView mTitleView;
 
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		initContext();
		initMenuItem();
		initViews();
	}

	@Override
	protected void onStart() {
		super.onStart();
		setTitleInfo(R.string.receive);
		
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
	}

	@Override
	public boolean onKeyUp(int keyCode, KeyEvent event) {
		boolean result = true;

		switch (keyCode) {
		case KeyEvent.KEYCODE_BACK:
		case KeyEvent.KEYCODE_STAR:
			returnBack();
			break;

//		case 29:// F1
//			CommonUtils.startWifiSettingActivity(mContext);
//			break;

		case KeyEvent.KEYCODE_1:
		case KeyEvent.KEYCODE_2:
		case KeyEvent.KEYCODE_3:
		case KeyEvent.KEYCODE_4:
		case KeyEvent.KEYCODE_5:
		case KeyEvent.KEYCODE_6:
		case KeyEvent.KEYCODE_7:
		case KeyEvent.KEYCODE_8:
		case KeyEvent.KEYCODE_9:
			int index = keyCode - KeyEvent.KEYCODE_1;
			if (index >= 0 && index < mMenuItemList.size()) {
				mMenuItemList.get(index).doAction();
			}
			break;
		default:
			result = false;
			break;
		}
		if (result) {
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}

	private void initViews() {
		requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
		setContentView(R.layout.activity_list_menu);
		getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.custom_title);
		
		setTitleInfo(R.string.main_menu);

		mListView = (ListView) findViewById(R.id.list);

		mListView.setAdapter(new ListMenuItemAdapter(this, mMenuItemList));

		mListView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1,
					int position, long id) {
				mMenuItemList.get(position).doAction();
			}
		});
	
	} 

	private void initMenuItem() { 
		addMenuItem(R.drawable.receive_order, R.string.receive_order, OrderTabActivity.class);
//		addMenuItem(R.drawable.receive_no_order, R.string.receive_no_order, ReceiveNoOrderTabActivity.class);
		addMenuItem(R.drawable.receive_no_order, R.string.receive_no_order, ReceiveExpressPageActivity.class);
		addMenuItem(R.drawable.receive_batch, R.string.receive_batch, ReceiveBatchActivity.class);
		addMenuItem(R.drawable.receive_no_order_unusaul, R.string.receive_no_order_unusaul, ReceiveNoOrderUnusualActivity.class);
		addMenuItem(R.drawable.receive_cancel_replace, R.string.receive_cancel_replace, ReceiveWayBillTabActivity.class);
		addMenuItem(R.drawable.receive_view, R.string.receive_view, ReceiveViewTabActivity.class);
		addReturnMenuItem(R.drawable.return_back, R.string.back);
		
		 
	}

	private void addMenuItem(int imgResId, int textResId, final Class<? extends Activity> cls) {
		MenuAction action = new MenuAction() {
			@Override
			public void action() {
				if(cls != null){
					Intent intent = new Intent(mContext, cls);
					startActivity(intent);
				}
			}
		};
		MenuItem item = new MenuItem(imgResId, textResId, action);
		mMenuItemList.add(item);
	}
	
	private void addReturnMenuItem(int imgResId, int textResId) {
		MenuAction action = new MenuAction() {
			@Override
			public void action() {
				returnBack();
			}
		};
		MenuItem item = new MenuItem(imgResId, textResId, action);
		mMenuItemList.add(item);
	}

	private void initContext() {
		mUserService = mAppContext.getUserService();
	}

	protected void returnBack() {
		finish();
	}
}