package cn.net.yto.ui;

import java.util.List;

import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import cn.net.yto.R;
import cn.net.yto.biz.BasicDataManager;
import cn.net.yto.biz.OrderManager;
import cn.net.yto.biz.ReceiveManager;
import cn.net.yto.common.Constants;
import cn.net.yto.utils.CommonUtils;
import cn.net.yto.utils.DialogHelper;
import cn.net.yto.vo.OrderVO;
import cn.net.yto.vo.ReceiveVO;
import cn.net.yto.vo.RecvexpVO;

public class ReceiveNoOrderUnusualActivity extends BaseActivity {
	private EditText mEditName;
	private EditText mEditPhone;
	private EditText mEditAddress;
	private EditText mEditRemark;
	private Button mBtnSave;
	private Button mBtnBack;
	private Spinner mSpinnerExp;
	
	private OrderVO mOrderVO;
	private ReceiveVO mReceiveVO;
	private List<RecvexpVO> mExceptions;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		initViews();
		initContext();
	}
	
	private void initViews(){
		requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
		setContentView(R.layout.activity_no_order_unusual_receive);
		mEditName = (EditText) findViewById(R.id.sender_name_edit);
		mEditPhone = (EditText) findViewById(R.id.sender_tel_edit);
		mEditAddress = (EditText) findViewById(R.id.sender_addr_edit);
		mEditRemark = (EditText) findViewById(R.id.remark_text);
		mSpinnerExp = (Spinner) findViewById(R.id.unusual_reason_spinner);
		mExceptions = BasicDataManager.getInstance().getRecvexpList();
		ArrayAdapter<RecvexpVO> adapter = new ArrayAdapter<RecvexpVO>(
                this, android.R.layout.simple_spinner_item,  mExceptions);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		mSpinnerExp.setAdapter(adapter);
		mSpinnerExp.setOnItemSelectedListener(new OnItemSelectedListener() {
			@Override
			public void onItemSelected(AdapterView<?> arg0, View arg1,
					int arg2, long arg3) {
				RecvexpVO rec = mExceptions.get(arg2);
				mReceiveVO.setCurrentState(rec.getFailureCode());
			}

			@Override
			public void onNothingSelected(AdapterView<?> arg0) {
			}
		});
		mBtnSave = (Button) findViewById(R.id.save_btn);
		mBtnBack = (Button) findViewById(R.id.back_btn);
		mBtnSave.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				save();
			}
		});
		mBtnBack.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				finish();
			}
		});
	}
	
	private void initContext(){
		getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.custom_title);
		mOrderVO = getIntent().getParcelableExtra("order");
		if(mOrderVO != null){
			setTitleInfo(R.string.receive_order_unusaul);
			initData(mOrderVO);
		} else{
			setTitleInfo(R.string.receive_no_order_unusaul);
		}
		mReceiveVO = new ReceiveVO();
	}
	
	private void initData(OrderVO vo){
		mEditName.setText(vo.getSenderName());
		mEditPhone.setText(vo.getSenderMobile());
		mEditAddress.setText(vo.getSenderAddress());
	}
	
	@Override
	protected void onResume() {
		super.onResume();
	}
	
	private void save(){
		String senderName = mEditName.getText().toString();
		if (CommonUtils.isEmpty(senderName)) {
			DialogHelper.showToast(mContext, R.string.way_bill_sender_name_empty_tips);
			return;
		}
		updateOrderVOState();
	}
	
	private void updateOrderVOState(){
		if(mOrderVO!=null){
			if(mReceiveVO == null){
				mReceiveVO = new ReceiveVO();
			}
			mReceiveVO.setWaybillNo(Constants.RECEIVE_NO_WAYBILLNO_PREX+System.currentTimeMillis());
			mReceiveVO.setOrderNo(mOrderVO.getOrderNo());
			mReceiveVO.setSendAddress(mEditAddress.getText().toString());
			mReceiveVO.setContactName(mEditName.getText().toString());
			mReceiveVO.setContactPhone(mEditPhone.getText().toString());
			mReceiveVO.setRemarks(mEditRemark.getText().toString());
//			mReceiveVO.setUploadStatu(ReceiveManager.UPLOAD_STATUS_WAIT_FOR_SEND);
//			mReceiveVO.setGetStatus(ReceiveManager.GET_STATUS_WAIT_FOR_SEND);
			int result = ReceiveManager.getInstance().saveReceive(mReceiveVO);
			if(result == ReceiveManager.SAVE_RESULT_SUCCESS){
				DialogHelper.showToast(this, R.string.operate_success);
				ReceiveManager.getInstance().backgroundSubmitReceive(mReceiveVO);
				mOrderVO.setAdditionState(String.valueOf(OrderManager.STATE_FETCHED_EXCEPTION));
				OrderManager.getInstance().updateOrder(mOrderVO);
				OrderManager.getInstance().updateOrderState(mOrderVO);
				clearText();
			} else{
				DialogHelper.showToast(this, R.string.operate_fail);				
			}
			
		} else{
			clearText();
			//无单有异常的逻辑还没有处理，目前只是临时的
			DialogHelper.showToast(this, R.string.operate_success);
		}
	}
	
	private void clearText(){
		mEditName.setText("");
		mEditPhone.setText("");
		mEditAddress.setText("");
		mEditRemark.setText("");
		mSpinnerExp.setSelection(0);
	}
}
